---
interface Props {
	body: string;
	door_num: string;
}

const { body, door_num } = Astro.props;



---



<button id="a" class="link-card" >
	<a href="#">
		<h2>
			Open Door 1
		</h2>
	</a>
</button>
<button id="b" class="link-card" >
	<a>
		<h2>
			Open Door 2
		</h2>
	</a>
</button>
<button id="c" class="link-card" >
	<a>
		<h2>
			Close Door 1 
		</h2>
	</a>
</button>
<button id="d" class="link-card" >
	<a>
		<h2>
			Close Door 2
		</h2>
	</a>
</button>
<button id="e" class="link-card" >
	<a>
		<h2>
			Content
		</h2>
	</a>
</button>

<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>

<script>
	
async function postQuery(id: number, num1: number, num2: number) {
	await fetch("http://127.0.0.1:80 ", {
		method: "POST",
		headers: {
			"Content-Type": "application/json",
			"Access-Control-Allow-Methods": "POST",
			"Access-Control-Allow-Headers": "Content-Type"
		},
		body: JSON.stringify({
			"id": id,
			"porta1": num1,
			"porta2": num2
		})
	})
	.then((response) => {
		console.log(response);
	})
	.catch((error) => {
		console.log(error);
	});
}

// 	let request = new HttpRequest();
// 	request.open("POST", "http://127.0.0.1:80/door-change");
// 	request.setRequestHeader("Content-Type", "application/json");
// 	request.setRequestHeader("Access-Control-Allow-Methods", "POST");
// 	request.setRequestHeader("Access-Control-Allow-Headers", "Content-Type");
// 	request.send(JSON.stringify({
// 		"id": id,
// 		"porta1": num1,
// 		"porta2": num2
// 	}));

// 	request.onload = () => {
// 		console.log(request.responseText);
// 	};

// 	request.onerror = () => {
// 		console.log("error");
// 	};

// }

async function getInfo() {
	await fetch("http://127.0.0.1:80/door", {
		method: "GET",
		headers: {
			"Content-Type": "application/json",
			"Access-Control-Allow-Origin": "*"
		}
	})
	.then((response) => {
		console.log(response);
	})
	.catch((error) => {
		console.log(error);
	});
}

// 	let request = new XMLHttpRequest();
// 	request.open("GET", "http://127.0.0.1:80/door");
// 	request.setRequestHeader("Content-Type", "application/json");
// 	request.setRequestHeader("Access-Control-Allow-Origin", "http://127.0.0.1:80");
// 	//"Access-Control-Allow-Origin"
// 	request.send();
// 	//load the response int the conent button e
// 	request.onload = () => {
// 		console.log(request.responseText);
// 	};

// 	request.onerror = () => {
// 		console.log("error");
// 	};

// }

const tgt = document.querySelector("#a");
tgt.addEventListener("click", () => {
	postQuery(1, 1, 0);
  });

const tgt2 = document.querySelector("#b");
tgt2.addEventListener("click", () => {
	postQuery(1, 0, 1);
  });

const tgt3 = document.querySelector("#c");
tgt3.addEventListener("click", () => {
	postQuery(1, 0, 0);
  });

const tgt4 = document.querySelector("#d");
tgt4.addEventListener("click", () => {
	postQuery(1, 0, 0);
  });
const tgt5 = document.querySelector("#e");
tgt5.addEventListener("click", () => {
	getInfo();
  });

</script>